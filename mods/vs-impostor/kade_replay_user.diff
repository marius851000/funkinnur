diff --git a/source/LoadReplayState.hx b/source/LoadReplayState.hx
index 1be8679..eeeb103 100644
--- a/source/LoadReplayState.hx
+++ b/source/LoadReplayState.hx
@@ -33,7 +33,7 @@ class LoadReplayState extends MusicBeatState
 	{
 		var menuBG:FlxSprite = new FlxSprite().loadGraphic(Paths.image('menuDesat'));
         #if sys
-		controlsStrings = sys.FileSystem.readDirectory(Sys.getCwd() + "/assets/replays/");
+		controlsStrings = sys.FileSystem.readDirectory(lime.system.System.applicationStorageDirectory + "/assets/replays/");
         #end
 		trace(controlsStrings);
 
diff --git a/source/Replay.hx b/source/Replay.hx
index 3bf37a0..933534c 100644
--- a/source/Replay.hx
+++ b/source/Replay.hx
@@ -77,7 +77,7 @@ class Replay
         var data:String = Json.stringify(json);
 
         #if sys
-        File.saveContent("assets/replays/replay-" + PlayState.SONG.song + "-time" + Date.now().getTime() + ".kadeReplay", data);
+        File.saveContent(lime.system.System.applicationStorageDirectory + "assets/replays/replay-" + PlayState.SONG.song + "-time" + Date.now().getTime() + ".kadeReplay", data);
         #end
     }
 
@@ -85,10 +85,10 @@ class Replay
     public function LoadFromJSON()
     {
         #if sys
-        trace('loading ' + Sys.getCwd() + 'assets/replays/' + path + ' replay...');
+        trace('loading ' + lime.system.System.applicationStorageDirectory + 'assets/replays/' + path + ' replay...');
         try
         {
-            var repl:ReplayJSON = cast Json.parse(File.getContent(Sys.getCwd() + "assets/replays/" + path));
+            var repl:ReplayJSON = cast Json.parse(File.getContent(lime.system.System.applicationStorageDirectory + "assets/replays/" + path));
             replay = repl;
         }
         catch(e)
diff --git a/source/TitleState.hx b/source/TitleState.hx
index c2a7dbf..c4727d0 100644
--- a/source/TitleState.hx
+++ b/source/TitleState.hx
@@ -55,8 +55,8 @@ class TitleState extends MusicBeatState
 		#end
 		
 		#if sys
-		if (!sys.FileSystem.exists(Sys.getCwd() + "/assets/replays"))
-			sys.FileSystem.createDirectory(Sys.getCwd() + "/assets/replays");
+		if (!sys.FileSystem.exists(lime.system.System.applicationStorageDirectory + "/assets/replays"))
+			sys.FileSystem.createDirectory(lime.system.System.applicationStorageDirectory + "/assets/replays");
 		#end
 
 		@:privateAccess
